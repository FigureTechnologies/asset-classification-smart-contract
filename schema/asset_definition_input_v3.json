{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AssetDefinitionInputV3",
  "description": "Allows the user to optionally specify the enabled flag on an asset definition, versus forcing it to be added manually on every request, when it will likely always be specified as `true`.",
  "type": "object",
  "required": [
    "asset_type",
    "verifiers"
  ],
  "properties": {
    "asset_type": {
      "description": "The name of the asset associated with the definition.  This value must be unique across all instances persisted in contract storage, or requests to add will be rejected.",
      "type": "string"
    },
    "bind_name": {
      "description": "Whether or not to bind a Provenance Blockchain Name Module name to this contract when this struct is used to add a new asset type to the contract.  If this value is omitted OR set to true in a request that adds an asset definition, the name derived by combining the [base_contract_name](crate::core::state::StateV2::base_contract_name) and the `asset_type` will be bound to the contract.  For example, if the base name is \"pb\" and the asset type is \"myasset,\" the resulting bound name would be \"myasset.pb\".",
      "type": [
        "boolean",
        "null"
      ]
    },
    "display_name": {
      "description": "A pretty human-readable name for this asset type (vs a typically snake_case asset_type name)",
      "type": [
        "string",
        "null"
      ]
    },
    "enabled": {
      "description": "Indicates whether or not the asset definition is enabled for use in the contract.  If disabled, requests to onboard assets of this type will be rejected.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "verifiers": {
      "description": "Individual verifier definitions.  There can be many verifiers for a single asset type.  Each value must have a unique `address` property or requests to add will be rejected.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/VerifierDetailV2"
      }
    }
  },
  "definitions": {
    "EntityDetail": {
      "description": "Various fields describing an entity, which could be an organization, account, etc.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A short description of the entity's purpose.",
          "type": [
            "string",
            "null"
          ]
        },
        "home_url": {
          "description": "A web link that can send observers to the organization that the entity belongs to.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "A short name describing the entity.",
          "type": [
            "string",
            "null"
          ]
        },
        "source_url": {
          "description": "A web link that can send observers to the source code of the entity for increased transparency.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "FeeDestinationV2": {
      "description": "Defines an external account designated as a recipient of funds during the verification process.",
      "type": "object",
      "required": [
        "address",
        "fee_amount"
      ],
      "properties": {
        "address": {
          "description": "The Provenance Blockchain bech32 address belonging to the account.",
          "type": "string"
        },
        "entity_detail": {
          "description": "An optional set of fields that define the fee destination, including its name and home URL location.",
          "anyOf": [
            {
              "$ref": "#/definitions/EntityDetail"
            },
            {
              "type": "null"
            }
          ]
        },
        "fee_amount": {
          "description": "The amount to be distributed to this account from the designated total [onboarding_cost](super::verifier_detail::VerifierDetailV2::onboarding_cost) of the containing [VerifierDetailV2](super::verifier_detail::VerifierDetailV2).  This number should always sum with the other fee destinations to be less than or at most equal to the total onboarding cost.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VerifierDetailV2": {
      "description": "Defines the fees and addresses for a single verifier account for an [AssetDefinitionV3](super::asset_definition::AssetDefinitionV3).",
      "type": "object",
      "required": [
        "address",
        "fee_destinations",
        "onboarding_cost",
        "onboarding_denom"
      ],
      "properties": {
        "address": {
          "description": "The Provenance Blockchain bech32 address of the verifier account.",
          "type": "string"
        },
        "entity_detail": {
          "description": "An optional set of fields that define the verifier, including its name and home URL location.",
          "anyOf": [
            {
              "$ref": "#/definitions/EntityDetail"
            },
            {
              "type": "null"
            }
          ]
        },
        "fee_destinations": {
          "description": "Each account that should receive fees when onboarding a new scope to the contract. All of these destinations' individual [fee_amount](super::fee_destination::FeeDestinationV2::fee_amount) properties should sum to an amount less than or equal to the [onboarding_cost](super::verifier_detail::VerifierDetailV2::onboarding_cost). Amounts not precisely equal in sum will cause this verifier detail to be considered invalid and rejected in requests that include it.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeDestinationV2"
          }
        },
        "onboarding_cost": {
          "description": "The total amount charged to use the onboarding process this this verifier.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "onboarding_denom": {
          "description": "The coin denomination used for this onboarding process.",
          "type": "string"
        }
      }
    }
  }
}
